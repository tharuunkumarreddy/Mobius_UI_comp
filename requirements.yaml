apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: requirements-management
  namespace: mobius-ui-comp
  labels:
    app: ui-component-classification
    component: requirements
spec:
  entrypoint: install-requirements
  templates:
  - name: install-requirements
    container:
      image: python:3.9-slim
      command: [sh, -c]
      args: 
        - |
          echo "Installing system dependencies..."
          apt-get update && apt-get install -y \
            gcc \
            g++ \
            libjpeg-dev \
            zlib1g-dev \
            libpng-dev \
            git \
            wget \
            curl
          
          echo "Installing Python requirements..."
          pip install --upgrade pip setuptools wheel
          pip install torch==2.0.1+cu118 torchvision==0.15.2+cu118 torchaudio==2.0.2+cu118 --index-url https://download.pytorch.org/whl/cu118
          pip install transformers==4.30.2
          pip install clip-by-openai==1.0
          pip install open-clip-torch==2.20.0
          pip install timm==0.9.2
          pip install opencv-python==4.8.0.74
          pip install Pillow==10.0.0
          pip install numpy==1.24.3
          pip install pandas==2.0.3
          pip install scikit-learn==1.3.0
          pip install matplotlib==3.7.1
          pip install seaborn==0.12.2
          pip install tqdm==4.65.0
          pip install requests==2.31.0
          pip install boto3==1.28.25
          pip install albumentations==1.3.1
          pip install wandb==0.15.5
          pip install tensorboard==2.13.0
          pip install accelerate==0.21.0
          pip install datasets==2.13.1
          pip install evaluate==0.4.0
          pip install ftfy==6.1.1
          pip install regex==2023.6.3
          pip install sentencepiece==0.1.99
          pip install protobuf==4.23.4
          pip install ipywidgets==8.0.7
          pip install jupyterlab==4.0.3
          pip install notebook==7.0.0
          pip install ipython==8.14.0
          pip install pyyaml==6.0
          pip install jsonschema==4.18.4
          pip install click==8.1.6
          pip install flask==2.3.2
          pip install fastapi==0.100.1
          pip install uvicorn==0.23.1
          pip install gunicorn==21.2.0
          pip install redis==4.6.0
          pip install psutil==5.9.5
          pip install py-cpuinfo==9.0.0
          pip install gputil==1.4.0
          
          echo "Installing additional ML dependencies..."
          pip install optuna==3.2.0
          pip install mlflow==2.5.0
          pip install dvc==3.0.0
          pip install great-expectations==0.17.10
          pip install pytest==7.4.0
          pip install pytest-cov==4.1.0
          pip install black==23.7.0
          pip install flake8==6.0.0
          pip install mypy==1.5.1
          pip install pre-commit==3.3.3
          
          echo "Verifying installations..."
          python -c "import torch; print(f'PyTorch version: {torch.__version__}')"
          python -c "import torchvision; print(f'TorchVision version: {torchvision.__version__}')"
          python -c "import transformers; print(f'Transformers version: {transformers.__version__}')"
          python -c "import clip; print('CLIP installed successfully')"
          python -c "import open_clip; print('OpenCLIP installed successfully')"
          python -c "import cv2; print(f'OpenCV version: {cv2.__version__}')"
          python -c "import PIL; print(f'Pillow version: {PIL.__version__}')"
          
          echo "Requirements installation completed successfully!"
      resources:
        requests:
          memory: "2Gi"
          cpu: "1000m"
        limits:
          memory: "4Gi"
          cpu: "2000m"
  
  - name: validate-environment
    container:
      image: python:3.9-slim
      command: [python, -c]
      args:
        - |
          import sys
          import subprocess
          import pkg_resources
          import json
          
          required_packages = {
              'torch': '2.0.1',
              'torchvision': '0.15.2',
              'transformers': '4.30.2',
              'clip-by-openai': '1.0',
              'open-clip-torch': '2.20.0',
              'timm': '0.9.2',
              'opencv-python': '4.8.0.74',
              'Pillow': '10.0.0',
              'numpy': '1.24.3',
              'pandas': '2.0.3',
              'scikit-learn': '1.3.0'
          }
          
          validation_results = {}
          all_valid = True
          
          for package, expected_version in required_packages.items():
              try:
                  installed_version = pkg_resources.get_distribution(package).version
                  is_valid = installed_version.startswith(expected_version.split('.')[0])
                  validation_results[package] = {
                      'expected': expected_version,
                      'installed': installed_version,
                      'valid': is_valid
                  }
                  if not is_valid:
                      all_valid = False
              except pkg_resources.DistributionNotFound:
                  validation_results[package] = {
                      'expected': expected_version,
                      'installed': 'NOT_FOUND',
                      'valid': False
                  }
                  all_valid = False
          
          print(json.dumps(validation_results, indent=2))
          
          if all_valid:
              print("✅ All required packages are properly installed!")
              sys.exit(0)
          else:
              print("❌ Some packages are missing or have incorrect versions!")
              sys.exit(1)
      resources:
        requests:
          memory: "1Gi"
          cpu: "500m"
        limits:
          memory: "2Gi"
          cpu: "1000m"
  
  outputs:
    parameters:
    - name: environment-status
      description: "Status of environment setup"
      valueFrom:
        path: /tmp/environment-status.json
    - name: package-versions
      description: "Installed package versions"
      valueFrom:
        path: /tmp/package-versions.json